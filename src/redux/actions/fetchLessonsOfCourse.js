import {
  GET_LESSONS_OF_COURSE_REQUEST,
  GET_LESSONS_OF_COURSE_SUCCESS,
  GET_LESSONS_OF_COURSE_FAILURE,
} from '../../constant/Action';
import { DA_HOAN_THANH, CHUAN_BI } from '../../constant/Constant';
const dataOfUserInit = [
  { id: 1, lessonId: 1, courseId: 7, gradeId: 3, userId: 1, status: DA_HOAN_THANH },
  { id: 2, lessonId: 2, courseId: 7, gradeId: 3, userId: 1, status: CHUAN_BI },
  { id: 3, lessonId: 2, courseId: 7, gradeId: 3, userId: 2, status: CHUAN_BI },
  { id: 4, lessonId: 35, courseId: 7, gradeId: 3, userId: 1, status: CHUAN_BI },
];
const dataOfCourseInit = [
  {
    id: 1,
    dataOfUser: null,
    code: 'L1',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 1',
    free: true,
    title: '3-digits numbers',
    content: '',
  },
  {
    id: 2,
    dataOfUser: null,
    code: 'L2',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 2',
    title: 'Addition of 3-digits numbers',
    content:
      '“Global Maths – Global Citizen” - Khơi nguồn đam mê, phát triển tiềm năng Toán và Khoa học tiếng Anh. Chương trình Toán tiếng Anh GMaths kết hợp giữa chương trình Toán Quốc tế với chương trình Toán của Bộ Giáo dục và Đào tạo',
  },
  {
    id: 3,
    dataOfUser: null,
    code: 'L3',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 3',
    free: false,
    title: 'Subtraction of 3-digits numbers',
    content: '',
  },
  {
    id: 4,
    dataOfUser: null,
    code: 'L4',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 4',
    free: false,
    title: 'Multiplication: 1-digit number by 1-digit number',
    content: '',
  },
  {
    id: 5,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Multiplication: 2-digits number by 1-digit number',
    content: '',
  },
  {
    id: 6,
    dataOfUser: null,
    code: 'L6',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 6',
    free: false,
    title: 'Division',
    content: '',
  },
  {
    id: 7,
    dataOfUser: null,
    code: 'L7',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 7',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 8,
    dataOfUser: null,
    code: 'L1',
    courseId: 1,
    gradeId: 1,
    name: 'Lesson 1',
    free: false,
    title: 'Subtraction of 3-digits numbers',
    content: '',
  },
  {
    id: 9,
    dataOfUser: null,
    code: 'L2',
    courseId: 1,
    gradeId: 1,
    name: 'Lesson 2',
    free: false,
    title: 'Multiplication: 1-digit number by 1-digit number',
    content: '',
  },
  {
    id: 10,
    dataOfUser: null,
    code: 'L3',
    courseId: 1,
    gradeId: 1,
    name: 'Lesson 3',
    free: false,
    title: 'Multiplication: 2-digits number by 1-digit number',
    content: '',
  },
  {
    id: 11,
    dataOfUser: null,
    code: 'L4',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 4',
    free: true,
    title: 'Division',
    content: '',
  },
  {
    id: 13,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 14,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 15,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 16,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 17,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 18,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 19,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 20,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 21,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 22,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 23,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 24,
    dataOfUser: null,
    code: 'L4',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 4',
    free: true,
    title: 'Division',
    content: '',
  },
  {
    id: 25,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 26,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 27,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 28,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 29,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 30,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 31,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 32,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 33,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 34,
    dataOfUser: null,
    code: 'L5',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'Factions',
    content: '',
  },
  {
    id: 35,
    dataOfUser: null,
    code: 'L35',
    courseId: 7,
    gradeId: 3,
    name: 'Lesson 5',
    free: false,
    title: 'ABCABCABCABC',
    content: '',
  },
];
const getLessonsOfCourse = (courseId, startIndex, numberOfElement) => {
  return dataOfCourseInit.filter((item) => item.courseId === courseId).slice(startIndex, startIndex + numberOfElement);
};
const getLessonsOfUser = (userId) => {
  return dataOfUserInit.filter((item) => item.userId === userId);
};
const getLessons = (courseId, startIndex, numberOfElement, userId) => {
  let lessonsOfCourse = getLessonsOfCourse(courseId, startIndex, numberOfElement);
  const lessonsOfUser = getLessonsOfUser(userId);
  for (let i = 0; i < lessonsOfUser.length; i++) {
    for (let j = 0; j < lessonsOfCourse.length; j++) {
      if (lessonsOfUser[i].lessonId === lessonsOfCourse[j].id) {
        lessonsOfCourse[j].dataOfUser = lessonsOfUser[i];
      }
    }
  }
  return lessonsOfCourse;
};
const fetchGetLessonsRequest = () => {
  return { type: GET_LESSONS_OF_COURSE_REQUEST };
};
const fetchGetLessonsSuccess = (data) => {
  return { type: GET_LESSONS_OF_COURSE_SUCCESS, payload: data };
};
const fetchGetLessonsFailure = (error) => {
  return { type: GET_LESSONS_OF_COURSE_FAILURE, payload: error.message };
};

//trả về 1 dispatch
export const fetchGetLessons = (courseId, startIndex, numberOfElement, userId) => {
  return async (dispatch) => {
    await dispatch(fetchGetLessonsRequest());
    try {
      // Giả lập thời gian tốn thời gian
      // await new Promise((resolve) => setTimeout(resolve, 500));
      const lessons = getLessons(courseId, startIndex, numberOfElement, userId);

      dispatch(fetchGetLessonsSuccess(lessons));
    } catch (error) {
      dispatch(fetchGetLessonsFailure(error));
    }
  };
};
